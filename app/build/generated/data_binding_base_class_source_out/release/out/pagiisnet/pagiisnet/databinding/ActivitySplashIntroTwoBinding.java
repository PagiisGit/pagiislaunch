// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ActivitySplashIntroTwoBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView chats;

  @NonNull
  public final ImageView pagiisRadiusChat;

  @NonNull
  public final ImageView pagiisRadiusFriends;

  @NonNull
  public final TextView share;

  @NonNull
  public final ImageView skipOne;

  @NonNull
  public final ImageView skipTwo;

  @NonNull
  public final TextView viewers;

  @NonNull
  public final ImageView views;

  private ActivitySplashIntroTwoBinding(@NonNull RelativeLayout rootView, @NonNull TextView chats,
      @NonNull ImageView pagiisRadiusChat, @NonNull ImageView pagiisRadiusFriends,
      @NonNull TextView share, @NonNull ImageView skipOne, @NonNull ImageView skipTwo,
      @NonNull TextView viewers, @NonNull ImageView views) {
    this.rootView = rootView;
    this.chats = chats;
    this.pagiisRadiusChat = pagiisRadiusChat;
    this.pagiisRadiusFriends = pagiisRadiusFriends;
    this.share = share;
    this.skipOne = skipOne;
    this.skipTwo = skipTwo;
    this.viewers = viewers;
    this.views = views;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySplashIntroTwoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySplashIntroTwoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_splash_intro_two, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySplashIntroTwoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chats;
      TextView chats = ViewBindings.findChildViewById(rootView, id);
      if (chats == null) {
        break missingId;
      }

      id = R.id.pagiis_radius_chat;
      ImageView pagiisRadiusChat = ViewBindings.findChildViewById(rootView, id);
      if (pagiisRadiusChat == null) {
        break missingId;
      }

      id = R.id.pagiis_radius_friends;
      ImageView pagiisRadiusFriends = ViewBindings.findChildViewById(rootView, id);
      if (pagiisRadiusFriends == null) {
        break missingId;
      }

      id = R.id.share;
      TextView share = ViewBindings.findChildViewById(rootView, id);
      if (share == null) {
        break missingId;
      }

      id = R.id.skipOne;
      ImageView skipOne = ViewBindings.findChildViewById(rootView, id);
      if (skipOne == null) {
        break missingId;
      }

      id = R.id.skipTwo;
      ImageView skipTwo = ViewBindings.findChildViewById(rootView, id);
      if (skipTwo == null) {
        break missingId;
      }

      id = R.id.viewers;
      TextView viewers = ViewBindings.findChildViewById(rootView, id);
      if (viewers == null) {
        break missingId;
      }

      id = R.id.views;
      ImageView views = ViewBindings.findChildViewById(rootView, id);
      if (views == null) {
        break missingId;
      }

      return new ActivitySplashIntroTwoBinding((RelativeLayout) rootView, chats, pagiisRadiusChat,
          pagiisRadiusFriends, share, skipOne, skipTwo, viewers, views);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
