// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class LiveEventsAndRipplesBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView EventName;

  @NonNull
  public final TextView eventLocation;

  @NonNull
  public final ImageView requestImage;

  @NonNull
  public final ImageView requestImageEvent;

  @NonNull
  public final TextView requestName;

  @NonNull
  public final TextView requestTextType;

  private LiveEventsAndRipplesBinding(@NonNull LinearLayout rootView, @NonNull TextView EventName,
      @NonNull TextView eventLocation, @NonNull ImageView requestImage,
      @NonNull ImageView requestImageEvent, @NonNull TextView requestName,
      @NonNull TextView requestTextType) {
    this.rootView = rootView;
    this.EventName = EventName;
    this.eventLocation = eventLocation;
    this.requestImage = requestImage;
    this.requestImageEvent = requestImageEvent;
    this.requestName = requestName;
    this.requestTextType = requestTextType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LiveEventsAndRipplesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LiveEventsAndRipplesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.live_events_and_ripples, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LiveEventsAndRipplesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EventName;
      TextView EventName = ViewBindings.findChildViewById(rootView, id);
      if (EventName == null) {
        break missingId;
      }

      id = R.id.eventLocation;
      TextView eventLocation = ViewBindings.findChildViewById(rootView, id);
      if (eventLocation == null) {
        break missingId;
      }

      id = R.id.requestImage;
      ImageView requestImage = ViewBindings.findChildViewById(rootView, id);
      if (requestImage == null) {
        break missingId;
      }

      id = R.id.requestImageEvent;
      ImageView requestImageEvent = ViewBindings.findChildViewById(rootView, id);
      if (requestImageEvent == null) {
        break missingId;
      }

      id = R.id.requestName;
      TextView requestName = ViewBindings.findChildViewById(rootView, id);
      if (requestName == null) {
        break missingId;
      }

      id = R.id.requestTextType;
      TextView requestTextType = ViewBindings.findChildViewById(rootView, id);
      if (requestTextType == null) {
        break missingId;
      }

      return new LiveEventsAndRipplesBinding((LinearLayout) rootView, EventName, eventLocation,
          requestImage, requestImageEvent, requestName, requestTextType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
