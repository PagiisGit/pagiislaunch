// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ActivityArtBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView canvasId;

  @NonNull
  public final AppBarLayoutBinding chatbarLayout;

  @NonNull
  public final FloatingActionButton goToMusic;

  @NonNull
  public final ProgressBar progressCircle;

  @NonNull
  public final RecyclerView siroccoRecyclerView;

  @NonNull
  public final RecyclerView siroccoRecyclerViewTop;

  private ActivityArtBinding(@NonNull RelativeLayout rootView, @NonNull ImageView canvasId,
      @NonNull AppBarLayoutBinding chatbarLayout, @NonNull FloatingActionButton goToMusic,
      @NonNull ProgressBar progressCircle, @NonNull RecyclerView siroccoRecyclerView,
      @NonNull RecyclerView siroccoRecyclerViewTop) {
    this.rootView = rootView;
    this.canvasId = canvasId;
    this.chatbarLayout = chatbarLayout;
    this.goToMusic = goToMusic;
    this.progressCircle = progressCircle;
    this.siroccoRecyclerView = siroccoRecyclerView;
    this.siroccoRecyclerViewTop = siroccoRecyclerViewTop;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArtBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArtBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_art, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArtBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.canvasId;
      ImageView canvasId = ViewBindings.findChildViewById(rootView, id);
      if (canvasId == null) {
        break missingId;
      }

      id = R.id.chatbarLayout;
      View chatbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatbarLayout == null) {
        break missingId;
      }
      AppBarLayoutBinding binding_chatbarLayout = AppBarLayoutBinding.bind(chatbarLayout);

      id = R.id.goToMusic;
      FloatingActionButton goToMusic = ViewBindings.findChildViewById(rootView, id);
      if (goToMusic == null) {
        break missingId;
      }

      id = R.id.progress_circle;
      ProgressBar progressCircle = ViewBindings.findChildViewById(rootView, id);
      if (progressCircle == null) {
        break missingId;
      }

      id = R.id.siroccoRecyclerView;
      RecyclerView siroccoRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (siroccoRecyclerView == null) {
        break missingId;
      }

      id = R.id.siroccoRecyclerViewTop;
      RecyclerView siroccoRecyclerViewTop = ViewBindings.findChildViewById(rootView, id);
      if (siroccoRecyclerViewTop == null) {
        break missingId;
      }

      return new ActivityArtBinding((RelativeLayout) rootView, canvasId, binding_chatbarLayout,
          goToMusic, progressCircle, siroccoRecyclerView, siroccoRecyclerViewTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
