// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mikhaellopez.circularimageview.CircularImageView;
import com.varunest.sparkbutton.SparkButton;
import io.github.ponnamkarthik.richlinkpreview.RichLinkView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ViewUserMemeItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout TitleId;

  @NonNull
  public final SparkButton imageViewAnimation;

  @NonNull
  public final TextView likesText;

  @NonNull
  public final ProgressBar loading;

  @NonNull
  public final ImageView memeImageView;

  @NonNull
  public final RichLinkView memeImageViewLink;

  @NonNull
  public final TextView memeName;

  @NonNull
  public final TextView postPosition;

  @NonNull
  public final TextView postTime;

  @NonNull
  public final TextView postTitle;

  @NonNull
  public final LinearLayout reactingIconsLayout;

  @NonNull
  public final CardView reactingLayout;

  @NonNull
  public final CircularImageView userItemViewProfilepic;

  @NonNull
  public final CardView userMemeCardView;

  @NonNull
  public final ImageView userName;

  private ViewUserMemeItemBinding(@NonNull CardView rootView, @NonNull LinearLayout TitleId,
      @NonNull SparkButton imageViewAnimation, @NonNull TextView likesText,
      @NonNull ProgressBar loading, @NonNull ImageView memeImageView,
      @NonNull RichLinkView memeImageViewLink, @NonNull TextView memeName,
      @NonNull TextView postPosition, @NonNull TextView postTime, @NonNull TextView postTitle,
      @NonNull LinearLayout reactingIconsLayout, @NonNull CardView reactingLayout,
      @NonNull CircularImageView userItemViewProfilepic, @NonNull CardView userMemeCardView,
      @NonNull ImageView userName) {
    this.rootView = rootView;
    this.TitleId = TitleId;
    this.imageViewAnimation = imageViewAnimation;
    this.likesText = likesText;
    this.loading = loading;
    this.memeImageView = memeImageView;
    this.memeImageViewLink = memeImageViewLink;
    this.memeName = memeName;
    this.postPosition = postPosition;
    this.postTime = postTime;
    this.postTitle = postTitle;
    this.reactingIconsLayout = reactingIconsLayout;
    this.reactingLayout = reactingLayout;
    this.userItemViewProfilepic = userItemViewProfilepic;
    this.userMemeCardView = userMemeCardView;
    this.userName = userName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ViewUserMemeItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ViewUserMemeItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.view_user_meme_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ViewUserMemeItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TitleId;
      LinearLayout TitleId = ViewBindings.findChildViewById(rootView, id);
      if (TitleId == null) {
        break missingId;
      }

      id = R.id.imageViewAnimation;
      SparkButton imageViewAnimation = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAnimation == null) {
        break missingId;
      }

      id = R.id.likesText;
      TextView likesText = ViewBindings.findChildViewById(rootView, id);
      if (likesText == null) {
        break missingId;
      }

      id = R.id.loading;
      ProgressBar loading = ViewBindings.findChildViewById(rootView, id);
      if (loading == null) {
        break missingId;
      }

      id = R.id.memeImageView;
      ImageView memeImageView = ViewBindings.findChildViewById(rootView, id);
      if (memeImageView == null) {
        break missingId;
      }

      id = R.id.memeImageViewLink;
      RichLinkView memeImageViewLink = ViewBindings.findChildViewById(rootView, id);
      if (memeImageViewLink == null) {
        break missingId;
      }

      id = R.id.memeName;
      TextView memeName = ViewBindings.findChildViewById(rootView, id);
      if (memeName == null) {
        break missingId;
      }

      id = R.id.postPosition;
      TextView postPosition = ViewBindings.findChildViewById(rootView, id);
      if (postPosition == null) {
        break missingId;
      }

      id = R.id.postTime;
      TextView postTime = ViewBindings.findChildViewById(rootView, id);
      if (postTime == null) {
        break missingId;
      }

      id = R.id.post_title;
      TextView postTitle = ViewBindings.findChildViewById(rootView, id);
      if (postTitle == null) {
        break missingId;
      }

      id = R.id.reactingIconsLayout;
      LinearLayout reactingIconsLayout = ViewBindings.findChildViewById(rootView, id);
      if (reactingIconsLayout == null) {
        break missingId;
      }

      id = R.id.reactingLayout;
      CardView reactingLayout = ViewBindings.findChildViewById(rootView, id);
      if (reactingLayout == null) {
        break missingId;
      }

      id = R.id.user_item_view_profilepic;
      CircularImageView userItemViewProfilepic = ViewBindings.findChildViewById(rootView, id);
      if (userItemViewProfilepic == null) {
        break missingId;
      }

      id = R.id.userMemeCardView;
      CardView userMemeCardView = ViewBindings.findChildViewById(rootView, id);
      if (userMemeCardView == null) {
        break missingId;
      }

      id = R.id.user_name;
      ImageView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      return new ViewUserMemeItemBinding((CardView) rootView, TitleId, imageViewAnimation,
          likesText, loading, memeImageView, memeImageViewLink, memeName, postPosition, postTime,
          postTitle, reactingIconsLayout, reactingLayout, userItemViewProfilepic, userMemeCardView,
          userName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
