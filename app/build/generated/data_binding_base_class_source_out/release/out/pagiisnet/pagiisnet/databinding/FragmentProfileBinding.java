// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.mikhaellopez.circularimageview.CircularImageView;
import com.varunest.sparkbutton.SparkButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class FragmentProfileBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView ChangeOwnDP;

  @NonNull
  public final CircularImageView ImageDP;

  @NonNull
  public final Button LogoutText;

  @NonNull
  public final FrameLayout ProfileFragment;

  @NonNull
  public final LinearLayout ProfileLayout;

  @NonNull
  public final ImageView addContent;

  @NonNull
  public final SparkButton imageViewAnimation;

  @NonNull
  public final RecyclerView memeRecyclerView;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final ImageView profileSettingsButton;

  @NonNull
  public final TextView profileStatus;

  @NonNull
  public final ImageView profileStoreOptionButton;

  @NonNull
  public final TextView profileStoreOptionText;

  @NonNull
  public final ProgressBar progressCircleOwnProfile;

  @NonNull
  public final ProgressBar progressCircleWebview;

  @NonNull
  public final TextView userProfileSettings;

  @NonNull
  public final TextView userProfileViews;

  @NonNull
  public final WebView webview;

  @NonNull
  public final ImageView writeStatus;

  private FragmentProfileBinding(@NonNull FrameLayout rootView, @NonNull ImageView ChangeOwnDP,
      @NonNull CircularImageView ImageDP, @NonNull Button LogoutText,
      @NonNull FrameLayout ProfileFragment, @NonNull LinearLayout ProfileLayout,
      @NonNull ImageView addContent, @NonNull SparkButton imageViewAnimation,
      @NonNull RecyclerView memeRecyclerView, @NonNull TextView profileName,
      @NonNull ImageView profileSettingsButton, @NonNull TextView profileStatus,
      @NonNull ImageView profileStoreOptionButton, @NonNull TextView profileStoreOptionText,
      @NonNull ProgressBar progressCircleOwnProfile, @NonNull ProgressBar progressCircleWebview,
      @NonNull TextView userProfileSettings, @NonNull TextView userProfileViews,
      @NonNull WebView webview, @NonNull ImageView writeStatus) {
    this.rootView = rootView;
    this.ChangeOwnDP = ChangeOwnDP;
    this.ImageDP = ImageDP;
    this.LogoutText = LogoutText;
    this.ProfileFragment = ProfileFragment;
    this.ProfileLayout = ProfileLayout;
    this.addContent = addContent;
    this.imageViewAnimation = imageViewAnimation;
    this.memeRecyclerView = memeRecyclerView;
    this.profileName = profileName;
    this.profileSettingsButton = profileSettingsButton;
    this.profileStatus = profileStatus;
    this.profileStoreOptionButton = profileStoreOptionButton;
    this.profileStoreOptionText = profileStoreOptionText;
    this.progressCircleOwnProfile = progressCircleOwnProfile;
    this.progressCircleWebview = progressCircleWebview;
    this.userProfileSettings = userProfileSettings;
    this.userProfileViews = userProfileViews;
    this.webview = webview;
    this.writeStatus = writeStatus;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProfileBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_profile, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProfileBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ChangeOwnDP;
      ImageView ChangeOwnDP = ViewBindings.findChildViewById(rootView, id);
      if (ChangeOwnDP == null) {
        break missingId;
      }

      id = R.id.ImageDP;
      CircularImageView ImageDP = ViewBindings.findChildViewById(rootView, id);
      if (ImageDP == null) {
        break missingId;
      }

      id = R.id.LogoutText;
      Button LogoutText = ViewBindings.findChildViewById(rootView, id);
      if (LogoutText == null) {
        break missingId;
      }

      FrameLayout ProfileFragment = (FrameLayout) rootView;

      id = R.id.ProfileLayout;
      LinearLayout ProfileLayout = ViewBindings.findChildViewById(rootView, id);
      if (ProfileLayout == null) {
        break missingId;
      }

      id = R.id.addContent;
      ImageView addContent = ViewBindings.findChildViewById(rootView, id);
      if (addContent == null) {
        break missingId;
      }

      id = R.id.imageViewAnimation;
      SparkButton imageViewAnimation = ViewBindings.findChildViewById(rootView, id);
      if (imageViewAnimation == null) {
        break missingId;
      }

      id = R.id.memeRecyclerView;
      RecyclerView memeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (memeRecyclerView == null) {
        break missingId;
      }

      id = R.id.profileName;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.profileSettingsButton;
      ImageView profileSettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (profileSettingsButton == null) {
        break missingId;
      }

      id = R.id.profileStatus;
      TextView profileStatus = ViewBindings.findChildViewById(rootView, id);
      if (profileStatus == null) {
        break missingId;
      }

      id = R.id.profileStoreOptionButton;
      ImageView profileStoreOptionButton = ViewBindings.findChildViewById(rootView, id);
      if (profileStoreOptionButton == null) {
        break missingId;
      }

      id = R.id.profileStoreOptionText;
      TextView profileStoreOptionText = ViewBindings.findChildViewById(rootView, id);
      if (profileStoreOptionText == null) {
        break missingId;
      }

      id = R.id.progress_circle_own_profile;
      ProgressBar progressCircleOwnProfile = ViewBindings.findChildViewById(rootView, id);
      if (progressCircleOwnProfile == null) {
        break missingId;
      }

      id = R.id.progress_circle_webview;
      ProgressBar progressCircleWebview = ViewBindings.findChildViewById(rootView, id);
      if (progressCircleWebview == null) {
        break missingId;
      }

      id = R.id.userProfileSettings;
      TextView userProfileSettings = ViewBindings.findChildViewById(rootView, id);
      if (userProfileSettings == null) {
        break missingId;
      }

      id = R.id.userProfileViews;
      TextView userProfileViews = ViewBindings.findChildViewById(rootView, id);
      if (userProfileViews == null) {
        break missingId;
      }

      id = R.id.webview;
      WebView webview = ViewBindings.findChildViewById(rootView, id);
      if (webview == null) {
        break missingId;
      }

      id = R.id.writeStatus;
      ImageView writeStatus = ViewBindings.findChildViewById(rootView, id);
      if (writeStatus == null) {
        break missingId;
      }

      return new FragmentProfileBinding((FrameLayout) rootView, ChangeOwnDP, ImageDP, LogoutText,
          ProfileFragment, ProfileLayout, addContent, imageViewAnimation, memeRecyclerView,
          profileName, profileSettingsButton, profileStatus, profileStoreOptionButton,
          profileStoreOptionText, progressCircleOwnProfile, progressCircleWebview,
          userProfileSettings, userProfileViews, webview, writeStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
