// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class WalkinFullScreenItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout canvasId;

  @NonNull
  public final ImageView cc;

  @NonNull
  public final ImageView ii;

  @NonNull
  public final ImageView walkinItemView;

  @NonNull
  public final TextView walkinItemViewText;

  private WalkinFullScreenItemBinding(@NonNull CardView rootView, @NonNull LinearLayout canvasId,
      @NonNull ImageView cc, @NonNull ImageView ii, @NonNull ImageView walkinItemView,
      @NonNull TextView walkinItemViewText) {
    this.rootView = rootView;
    this.canvasId = canvasId;
    this.cc = cc;
    this.ii = ii;
    this.walkinItemView = walkinItemView;
    this.walkinItemViewText = walkinItemViewText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static WalkinFullScreenItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WalkinFullScreenItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.walkin_full_screen_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WalkinFullScreenItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.canvasId;
      LinearLayout canvasId = ViewBindings.findChildViewById(rootView, id);
      if (canvasId == null) {
        break missingId;
      }

      id = R.id.cc;
      ImageView cc = ViewBindings.findChildViewById(rootView, id);
      if (cc == null) {
        break missingId;
      }

      id = R.id.ii;
      ImageView ii = ViewBindings.findChildViewById(rootView, id);
      if (ii == null) {
        break missingId;
      }

      id = R.id.walkinItemView;
      ImageView walkinItemView = ViewBindings.findChildViewById(rootView, id);
      if (walkinItemView == null) {
        break missingId;
      }

      id = R.id.walkinItemViewText;
      TextView walkinItemViewText = ViewBindings.findChildViewById(rootView, id);
      if (walkinItemViewText == null) {
        break missingId;
      }

      return new WalkinFullScreenItemBinding((CardView) rootView, canvasId, cc, ii, walkinItemView,
          walkinItemViewText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
