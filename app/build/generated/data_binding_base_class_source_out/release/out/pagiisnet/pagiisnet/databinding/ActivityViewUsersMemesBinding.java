// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ActivityViewUsersMemesBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView LogSearchIconGo;

  @NonNull
  public final TextView SearcNotice;

  @NonNull
  public final RecyclerView SearchRecyclerViewTop;

  @NonNull
  public final ImageView businessId;

  @NonNull
  public final AppBarLayoutBinding chatbarLayout;

  @NonNull
  public final FloatingActionButton contentRating;

  @NonNull
  public final FloatingActionButton contentRatingLnk;

  @NonNull
  public final FloatingActionButton goToEvents;

  @NonNull
  public final FloatingActionButton goToVideos;

  @NonNull
  public final FloatingActionButton logSearchIcon;

  @NonNull
  public final RecyclerView memeRecyclerView;

  @NonNull
  public final LinearLayout nputLayout;

  @NonNull
  public final ProgressBar progressCircleUserMemes;

  @NonNull
  public final TextInputEditText searchEdittext;

  @NonNull
  public final CardView searchTextInputLayout;

  private ActivityViewUsersMemesBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView LogSearchIconGo, @NonNull TextView SearcNotice,
      @NonNull RecyclerView SearchRecyclerViewTop, @NonNull ImageView businessId,
      @NonNull AppBarLayoutBinding chatbarLayout, @NonNull FloatingActionButton contentRating,
      @NonNull FloatingActionButton contentRatingLnk, @NonNull FloatingActionButton goToEvents,
      @NonNull FloatingActionButton goToVideos, @NonNull FloatingActionButton logSearchIcon,
      @NonNull RecyclerView memeRecyclerView, @NonNull LinearLayout nputLayout,
      @NonNull ProgressBar progressCircleUserMemes, @NonNull TextInputEditText searchEdittext,
      @NonNull CardView searchTextInputLayout) {
    this.rootView = rootView;
    this.LogSearchIconGo = LogSearchIconGo;
    this.SearcNotice = SearcNotice;
    this.SearchRecyclerViewTop = SearchRecyclerViewTop;
    this.businessId = businessId;
    this.chatbarLayout = chatbarLayout;
    this.contentRating = contentRating;
    this.contentRatingLnk = contentRatingLnk;
    this.goToEvents = goToEvents;
    this.goToVideos = goToVideos;
    this.logSearchIcon = logSearchIcon;
    this.memeRecyclerView = memeRecyclerView;
    this.nputLayout = nputLayout;
    this.progressCircleUserMemes = progressCircleUserMemes;
    this.searchEdittext = searchEdittext;
    this.searchTextInputLayout = searchTextInputLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewUsersMemesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewUsersMemesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_users_memes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewUsersMemesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.LogSearchIconGo;
      ImageView LogSearchIconGo = ViewBindings.findChildViewById(rootView, id);
      if (LogSearchIconGo == null) {
        break missingId;
      }

      id = R.id.SearcNotice;
      TextView SearcNotice = ViewBindings.findChildViewById(rootView, id);
      if (SearcNotice == null) {
        break missingId;
      }

      id = R.id.SearchRecyclerViewTop;
      RecyclerView SearchRecyclerViewTop = ViewBindings.findChildViewById(rootView, id);
      if (SearchRecyclerViewTop == null) {
        break missingId;
      }

      id = R.id.businessId;
      ImageView businessId = ViewBindings.findChildViewById(rootView, id);
      if (businessId == null) {
        break missingId;
      }

      id = R.id.chatbarLayout;
      View chatbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatbarLayout == null) {
        break missingId;
      }
      AppBarLayoutBinding binding_chatbarLayout = AppBarLayoutBinding.bind(chatbarLayout);

      id = R.id.contentRating;
      FloatingActionButton contentRating = ViewBindings.findChildViewById(rootView, id);
      if (contentRating == null) {
        break missingId;
      }

      id = R.id.contentRatingLnk;
      FloatingActionButton contentRatingLnk = ViewBindings.findChildViewById(rootView, id);
      if (contentRatingLnk == null) {
        break missingId;
      }

      id = R.id.goToEvents;
      FloatingActionButton goToEvents = ViewBindings.findChildViewById(rootView, id);
      if (goToEvents == null) {
        break missingId;
      }

      id = R.id.goToVideos;
      FloatingActionButton goToVideos = ViewBindings.findChildViewById(rootView, id);
      if (goToVideos == null) {
        break missingId;
      }

      id = R.id.logSearchIcon;
      FloatingActionButton logSearchIcon = ViewBindings.findChildViewById(rootView, id);
      if (logSearchIcon == null) {
        break missingId;
      }

      id = R.id.memeRecyclerView;
      RecyclerView memeRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (memeRecyclerView == null) {
        break missingId;
      }

      id = R.id.nputLayout;
      LinearLayout nputLayout = ViewBindings.findChildViewById(rootView, id);
      if (nputLayout == null) {
        break missingId;
      }

      id = R.id.progress_circle_user_memes;
      ProgressBar progressCircleUserMemes = ViewBindings.findChildViewById(rootView, id);
      if (progressCircleUserMemes == null) {
        break missingId;
      }

      id = R.id.searchEdittext;
      TextInputEditText searchEdittext = ViewBindings.findChildViewById(rootView, id);
      if (searchEdittext == null) {
        break missingId;
      }

      id = R.id.searchTextInputLayout;
      CardView searchTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInputLayout == null) {
        break missingId;
      }

      return new ActivityViewUsersMemesBinding((RelativeLayout) rootView, LogSearchIconGo,
          SearcNotice, SearchRecyclerViewTop, businessId, binding_chatbarLayout, contentRating,
          contentRatingLnk, goToEvents, goToVideos, logSearchIcon, memeRecyclerView, nputLayout,
          progressCircleUserMemes, searchEdittext, searchTextInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
