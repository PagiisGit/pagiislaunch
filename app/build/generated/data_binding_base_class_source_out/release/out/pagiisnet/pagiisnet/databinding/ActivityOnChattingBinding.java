// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ActivityOnChattingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AppBarLayoutBinding chatbarLayout;

  @NonNull
  public final ImageView imagePicker;

  @NonNull
  public final RecyclerView messagesRecyclerView;

  @NonNull
  public final FloatingActionButton sendIcon;

  @NonNull
  public final EditText textInputField;

  @NonNull
  public final TextInputLayout textInputLayout;

  private ActivityOnChattingBinding(@NonNull RelativeLayout rootView,
      @NonNull AppBarLayoutBinding chatbarLayout, @NonNull ImageView imagePicker,
      @NonNull RecyclerView messagesRecyclerView, @NonNull FloatingActionButton sendIcon,
      @NonNull EditText textInputField, @NonNull TextInputLayout textInputLayout) {
    this.rootView = rootView;
    this.chatbarLayout = chatbarLayout;
    this.imagePicker = imagePicker;
    this.messagesRecyclerView = messagesRecyclerView;
    this.sendIcon = sendIcon;
    this.textInputField = textInputField;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityOnChattingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityOnChattingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_on_chatting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityOnChattingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chatbarLayout;
      View chatbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatbarLayout == null) {
        break missingId;
      }
      AppBarLayoutBinding binding_chatbarLayout = AppBarLayoutBinding.bind(chatbarLayout);

      id = R.id.imagePicker;
      ImageView imagePicker = ViewBindings.findChildViewById(rootView, id);
      if (imagePicker == null) {
        break missingId;
      }

      id = R.id.messagesRecyclerView;
      RecyclerView messagesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (messagesRecyclerView == null) {
        break missingId;
      }

      id = R.id.sendIcon;
      FloatingActionButton sendIcon = ViewBindings.findChildViewById(rootView, id);
      if (sendIcon == null) {
        break missingId;
      }

      id = R.id.textInputField;
      EditText textInputField = ViewBindings.findChildViewById(rootView, id);
      if (textInputField == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new ActivityOnChattingBinding((RelativeLayout) rootView, binding_chatbarLayout,
          imagePicker, messagesRecyclerView, sendIcon, textInputField, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
