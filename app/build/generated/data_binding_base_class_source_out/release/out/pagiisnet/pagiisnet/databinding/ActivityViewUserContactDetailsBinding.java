// Generated by view binder compiler. Do not edit!
package pagiisnet.pagiisnet.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pagiisnet.pagiisnet.R;

public final class ActivityViewUserContactDetailsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView ImageDP;

  @NonNull
  public final FloatingActionButton VisitUserContactRequestList;

  @NonNull
  public final FloatingActionButton VisitUserPosts;

  @NonNull
  public final TextView cellLink;

  @NonNull
  public final FloatingActionButton cellNumberLinkIcon;

  @NonNull
  public final AppBarLayoutBinding chatbarLayout;

  @NonNull
  public final TextView emailLink;

  @NonNull
  public final FloatingActionButton emailLinkIcon;

  @NonNull
  public final TextView profileName;

  @NonNull
  public final TextView profileStatus;

  @NonNull
  public final ProgressBar progressCircleOwnProfile;

  @NonNull
  public final ImageView writeStatus;

  private ActivityViewUserContactDetailsBinding(@NonNull CardView rootView,
      @NonNull ImageView ImageDP, @NonNull FloatingActionButton VisitUserContactRequestList,
      @NonNull FloatingActionButton VisitUserPosts, @NonNull TextView cellLink,
      @NonNull FloatingActionButton cellNumberLinkIcon, @NonNull AppBarLayoutBinding chatbarLayout,
      @NonNull TextView emailLink, @NonNull FloatingActionButton emailLinkIcon,
      @NonNull TextView profileName, @NonNull TextView profileStatus,
      @NonNull ProgressBar progressCircleOwnProfile, @NonNull ImageView writeStatus) {
    this.rootView = rootView;
    this.ImageDP = ImageDP;
    this.VisitUserContactRequestList = VisitUserContactRequestList;
    this.VisitUserPosts = VisitUserPosts;
    this.cellLink = cellLink;
    this.cellNumberLinkIcon = cellNumberLinkIcon;
    this.chatbarLayout = chatbarLayout;
    this.emailLink = emailLink;
    this.emailLinkIcon = emailLinkIcon;
    this.profileName = profileName;
    this.profileStatus = profileStatus;
    this.progressCircleOwnProfile = progressCircleOwnProfile;
    this.writeStatus = writeStatus;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityViewUserContactDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityViewUserContactDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_view_user_contact_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityViewUserContactDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ImageDP;
      ImageView ImageDP = ViewBindings.findChildViewById(rootView, id);
      if (ImageDP == null) {
        break missingId;
      }

      id = R.id.VisitUserContactRequestList;
      FloatingActionButton VisitUserContactRequestList = ViewBindings.findChildViewById(rootView, id);
      if (VisitUserContactRequestList == null) {
        break missingId;
      }

      id = R.id.VisitUserPosts;
      FloatingActionButton VisitUserPosts = ViewBindings.findChildViewById(rootView, id);
      if (VisitUserPosts == null) {
        break missingId;
      }

      id = R.id.cellLink;
      TextView cellLink = ViewBindings.findChildViewById(rootView, id);
      if (cellLink == null) {
        break missingId;
      }

      id = R.id.cellNumberLinkIcon;
      FloatingActionButton cellNumberLinkIcon = ViewBindings.findChildViewById(rootView, id);
      if (cellNumberLinkIcon == null) {
        break missingId;
      }

      id = R.id.chatbarLayout;
      View chatbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (chatbarLayout == null) {
        break missingId;
      }
      AppBarLayoutBinding binding_chatbarLayout = AppBarLayoutBinding.bind(chatbarLayout);

      id = R.id.emailLink;
      TextView emailLink = ViewBindings.findChildViewById(rootView, id);
      if (emailLink == null) {
        break missingId;
      }

      id = R.id.emailLinkIcon;
      FloatingActionButton emailLinkIcon = ViewBindings.findChildViewById(rootView, id);
      if (emailLinkIcon == null) {
        break missingId;
      }

      id = R.id.profileName;
      TextView profileName = ViewBindings.findChildViewById(rootView, id);
      if (profileName == null) {
        break missingId;
      }

      id = R.id.profileStatus;
      TextView profileStatus = ViewBindings.findChildViewById(rootView, id);
      if (profileStatus == null) {
        break missingId;
      }

      id = R.id.progress_circle_own_profile;
      ProgressBar progressCircleOwnProfile = ViewBindings.findChildViewById(rootView, id);
      if (progressCircleOwnProfile == null) {
        break missingId;
      }

      id = R.id.writeStatus;
      ImageView writeStatus = ViewBindings.findChildViewById(rootView, id);
      if (writeStatus == null) {
        break missingId;
      }

      return new ActivityViewUserContactDetailsBinding((CardView) rootView, ImageDP,
          VisitUserContactRequestList, VisitUserPosts, cellLink, cellNumberLinkIcon,
          binding_chatbarLayout, emailLink, emailLinkIcon, profileName, profileStatus,
          progressCircleOwnProfile, writeStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
